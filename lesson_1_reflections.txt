

the command itself is diff -u file01 file02, 
what the -u for?

How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    #1 Marking the two files with either a + or a - 
	to show content is from which file.

	#2 Only showing the differences made it simple 
	to filter past the changes i would want to keep
	and those that i want to return to the original
	state.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Comparing would be quite simple, any issues that come up
    is later version can be reverted back to a last working
    verison

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    the pros are the ability to create meaningful versions at
    logical truning points
    the cons are that it can be hard to keep on top of
    as well as the issue of human error

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Changes to interdependant files can be tracked as this might be
    meaningful and affect all files.

How can you use the commands git log and git diff to view the history of files?

    use log to see all the commits and 
    use diff to compare two commits to see the differences.

How might using version control make you more confident to make changes that
could break something?

    You always know that there is version you can fall back on

Now that you have your workspace set up, what do you want to try using Git for?

    I want to use it for web development, application development